import { Theme } from "theme.slint";
import { Background } from "background.slint";
import { LeftNavBar } from "leftnavbar.slint";
import { Tab, TabsExtended } from "tabs.slint";

export global MainViewModel {
    in-out property <Tab> selected-tab: TabsExtended.cpu-tab;
    callback select-tab(Tab);

    select-tab(tab) => {
        selected-tab = tab
    }

    in property <string> cpu-data : "M 0 0";
}

export component Body inherits VerticalLayout {
    in property <Tab> selected-tab;
    padding-left: 24px;
    padding-top: 64px;
    Text {
        // width: 100%;
        max-height: 100px;
        text: selected-tab.name;
        font-family: "Raleway";
        font-size: 30px;
        font-weight: 700;
        horizontal-alignment: left;
        vertical-alignment: top;
        letter-spacing: 0px;
        color: #ffffffff;
        overflow: TextOverflow.elide;
    }

    VerticalLayout {
        width: 100%;
        padding-top: 25px;
        padding-right: 25px;
        padding-bottom: 25px;
        Rectangle {
            x: 0px;
            background: #2d313b99;
            border-radius: 30px;
            Path {
                commands: selected-tab == TabsExtended.cpu-tab? 
                    MainViewModel.cpu-data : 
                    selected-tab == TabsExtended.gpu-tab? 
                    "M 0 0 L 10 10" : "M 0 0";
                stroke-width: 2px;
                stroke: red;
            }
        }
    }
}

export component Dashboard inherits Window {
    title: "System metrics tracker";
    background: Theme.palette.main-background;
    min-width: 20px;
    min-height: 10px;
    preferred-width: 1440px;
    preferred-height: 900px;
    icon: @image-url("images/appicon.png");
    // no-frame: true;
    Background {
        width: 100%;
        height: 100%;
    }
    HorizontalLayout {
        width: 100%;
        height: 100%;
        LeftNavBar {
            y: 0px;
            width: 30%;
            height: 100%;
            selected-tab: MainViewModel.selected-tab;
            select-tab(tab) => {
                MainViewModel.select-tab(tab)
            }
        }

        Body {
            width: 70%;
            selected-tab: MainViewModel.selected-tab;
        }
    }
}